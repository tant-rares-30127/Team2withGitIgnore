@using Microsoft.AspNetCore.Identity
@model IEnumerable<UserDto>
@*
    @model IEnumerable<UserWithRole>
@inject SignInManagerManager<IdentityUser> SignInManager*@

    @{
        ViewData["Title"] = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <h1>Index</h1>

<table class="table">
    <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Role)
                </th>
                <th>
                    Change role
                </th>
            </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
         {
         <tr>
             <td>
                 @Html.DisplayFor(modelItem => item.Email)
             </td>
             <td>
                @Html.DisplayFor(modelItem => item.Role)
             </td>
             <td>
                @if (item.Role.Equals("Administrator"))
                {

                     <a asp-action="AssignUser" asp-route-id="@item.Id">Assign User</a>
                     <span> | </span>
                     <a asp-action="AssignOperator" asp-route-id="@item.Id">Assign Operator</a>
                 }
                 else
                 {
                    @if (item.Role.Equals("Operator"))
                    {
                       <a asp-action="AssignAdmin" asp-route-id="@item.Id">Assign Administrator</a>
                       <span> | </span>
                       <a asp-action="AssignUser" asp-route-id="@item.Id">Assign User</a>
                     }
                    else
                     {
                         <a asp-action="AssignAdmin" asp-route-id="@item.Id">Assign Administrator</a>
                         <span> | </span>
                         <a asp-action="AssignOperator" asp-route-id="@item.Id">Assign Operator</a>
                     }
                 }
             </td>
         </tr>
         }
     </tbody>
</table>
